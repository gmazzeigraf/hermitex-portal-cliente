<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:b="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<global-method-security secured-annotations="enabled" />

	<http auto-config="false" use-expressions="true" authentication-manager-ref="authenticationManager" entry-point-ref="authenticationEntryPoint">
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER" />

		<intercept-url pattern="/login.jsf" access="permitAll" />

		<!-- Administracao -->
		<intercept-url pattern="/pages/administracao/acesso/perfil.jsf" access="hasAnyRole('ROLE_ADM_ACESSO_PERFIL')" />
		<intercept-url pattern="/pages/administracao/acesso/usuario.jsf" access="hasAnyRole('ROLE_ADM_ACESSO_USUARIO')" />
		<intercept-url pattern="/pages/administracao/produto/tamanho.jsf" access="hasAnyRole('ROLE_ADM_PRODUTO_TAMANHO')" />

		<!-- Cliente -->
		<intercept-url pattern="/pages/cliente/cadastro.jsf" access="hasAnyRole('ROLE_CLI_CADASTRO')" />
		<intercept-url pattern="/pages/cliente/produto/categoria.jsf" access="hasAnyRole('ROLE_CLI_PRODUTO_CATEGORIA')" />
		<intercept-url pattern="/pages/cliente/produto/setor.jsf" access="hasAnyRole('ROLE_CLI_PRODUTO_SETOR')" />
		<intercept-url pattern="/pages/cliente/produto/cadastro.jsf" access="hasAnyRole('ROLE_CLI_PRODUTO_CADASTRO')" />
		<intercept-url pattern="/pages/cliente/produto/estoque.jsf" access="hasAnyRole('ROLE_CLI_PRODUTO_ESTOQUE')" />
		<intercept-url pattern="/pages/cliente/acesso/perfil.jsf" access="hasAnyRole('ROLE_CLI_ACESSO_PERFIL')" />
		<intercept-url pattern="/pages/cliente/acesso/usuario.jsf" access="hasAnyRole('ROLE_CLI_ACESSO_USUARIO')" />

		<!-- Misc -->
		<intercept-url pattern="/pages/publico/**" access="permitAll" />
		<intercept-url pattern="/pages/exception/**" access="permitAll" />
		<intercept-url pattern="/pages/**" access="isFullyAuthenticated()" />

		<logout invalidate-session="true" logout-success-url="/login.jsf" delete-cookies="JSESSIONID" logout-url="/j_spring_security_logout" />

		<access-denied-handler error-page="/pages/erro/negado.jsf" />

		<csrf request-matcher-ref="csrfSecurityRequestMatcher" />

		<headers>
			<frame-options strategy="static" policy="SAMEORIGIN" />
			<xss-protection enabled="true" />
		</headers>
	</http>

	<b:bean id="authenticationFilter" class="br.com.graflogic.hermitex.cliente.web.security.AuthenticationFilter">
		<b:property name="sessionAuthenticationStrategy" ref="authenticationStrategy" />
		<b:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<b:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<b:property name="authenticationManager" ref="authenticationManager" />
	</b:bean>

	<authentication-manager id="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT email, senha, (CASE status WHEN 'A' then 1 ELSE 0 END)
		      		FROM tb_usuario WHERE email = ?"
				authorities-by-username-query="SELECT usu.email, per.cd_permissao 
				FROM tb_usuario usu INNER JOIN tb_perfil_usuario_permissao_acesso per ON usu.id_perfil = per.id_perfil
				WHERE usu.email = ?" />
			<password-encoder hash="sha-256" base64="true" />
		</authentication-provider>
	</authentication-manager>

	<b:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<b:property name="defaultTargetUrl" value="/pages/home.jsf" />
		<b:property name="alwaysUseDefaultTargetUrl" value="true" />
	</b:bean>

	<b:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<b:constructor-arg name="defaultFailureUrl" value="/login.jsf?error=true" />
	</b:bean>

	<b:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<b:constructor-arg name="loginFormUrl" value="/login.jsf" />
	</b:bean>

	<b:bean id="permissaoMenuFilter" class="br.com.graflogic.base.web.filter.PermissaoMenuFilter">
		<b:constructor-arg name="caminhoMenu" value=":formMenu:menu" />
	</b:bean>

	<!-- Tratamento de sessoes concorrentes -->
	<b:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<b:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<b:constructor-arg name="expiredUrl" value="/login.jsf?expired=true" />
	</b:bean>

	<b:bean id="concurrencyStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<b:property name="maximumSessions" value="1" />
		<b:property name="exceptionIfMaximumExceeded" value="false" />
		<b:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</b:bean>

	<b:bean id="registerStrategy" class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
		<b:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</b:bean>

	<b:bean id="authenticationStrategy" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<b:constructor-arg name="delegateStrategies">
			<b:list>
				<b:ref bean="concurrencyStrategy" />
				<b:ref bean="registerStrategy" />
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
</b:beans>